{
  "Uuid": "48ff4498-617a-4f4b-9a00-9fffd1861304",
  "IsCustomNode": true,
  "Category": "Shapely.Geometry",
  "Description": "",
  "Name": "ShapelyTriangulate",
  "ElementResolver": {
    "ResolutionMap": {
      "Autodesk.Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "OUT",
      "Id": "f801f13cf2ef482cad83f2395e4f8ea3",
      "Inputs": [
        {
          "Id": "13073397b7c648fea5dc9a7c79a31cfc",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Sortie de fonction, utiliser avec les noeuds personnalisés"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_dynpoints",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "01e8470b254144e3a40019b80b7c58ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c21bebc747944beeba3c6c0b952340ff",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "ce5fb9df6c2c4efcac3fd8bec2cac087",
      "Inputs": [
        {
          "Id": "81e3f8f582ca4ec586c520b89a6556ea",
          "Name": "lists",
          "Description": "Liste de listes à transposer\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8544a20e5ca24788bf3dac7815dd7e1c",
          "Name": "lists",
          "Description": "Liste des listes transposées",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Permute des lignes et des colonnes dans une liste des listes. Si certaines lignes sont plus courtes que d'autres, les valeurs nulles sont insérées en tant qu'espaces réservés dans le réseau obtenu de sorte qu'il est toujours rectangulaire.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p.X;\np.Y;",
      "Id": "e6e4f72567d6403ba0042dadcd74212a",
      "Inputs": [
        {
          "Id": "17dd1570c7214cf295d60b14419f0340",
          "Name": "p",
          "Description": "p",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4923bef91e9148009ce2b46a66ce6a57",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77d9d076810d4167b4ac621e1484dc4e",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "bb80094b51464c379f14aa86c37699da",
      "Inputs": [
        {
          "Id": "323cbe25cf6c477bab596e0ce4df6fa0",
          "Name": "item0",
          "Description": "Index de l'élément 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d62a2c12e14a414a96fd6a77b9c20911",
          "Name": "item1",
          "Description": "Index de l'élément #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddcf191211d546078f76db4fb7c79293",
          "Name": "list",
          "Description": "Liste (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer une liste des entrées indiquées"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "ae55e2475a8245618879cb85bcc6e5f2",
      "Inputs": [
        {
          "Id": "cd0988babb8b4a97a6f6f850ae062823",
          "Name": "list",
          "Description": "Liste à couper en sous-listes\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1c076c1f1c44c028802624a42fc0b03",
          "Name": "lengths",
          "Description": "Longueurs de sous-listes consécutives à créer à partir de la liste d'entrée\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c1fd587a9d54ca49ebead72f229a746",
          "Name": "lists",
          "Description": "Sous-listes créées à partir de la liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Couper une liste dans un jeu de sous-listes consécutives avec les longueurs spécifiées. La division de liste commence en haut de la liste.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "2a04dd8c0ce64ea09e0fd589a7b3b8ea",
      "Inputs": [
        {
          "Id": "555fe22563ca409eae19ecb10eb2ea75",
          "Name": "list",
          "Description": "Obtenir le nombre d'éléments de cette liste.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b213b0518e246abbb61aefd425d349e",
          "Name": "int",
          "Description": "Longueur de la liste.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Renvoie le nombre d'éléments stockés dans la liste indiquée.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright(c) 2023, Durmus Bayryam\r\n# Gıthub : https://github.com/DurmusCesur/Shapely.git\r\nimport clr\r\nimport sys\r\nimport re\r\nimport System\r\n\r\nclr.AddReference('Python.Included')\r\nimport Python.Included as pyInc\r\npath_py3_lib = pyInc.Installer.EmbeddedPythonHome\r\nsys.path.append(path_py3_lib + r'\\Lib\\site-packages')\r\n\r\nimport shapely.geometry as sg\r\nimport Autodesk.DesignScript.Geometry as adg\r\nfrom shapely import normalize, Polygon , BufferJoinStyle , MultiPoint\r\nfrom shapely.ops import triangulate\r\n\r\n\r\ndef spolygon (dynamo_polygons ):\r\n    \r\n   \r\n    multipoint = sg.MultiPoint([coord for coord in dynamo_polygons])\r\n    shapely_poly = multipoint\r\n    return shapely_poly\r\n\r\n\r\nif isinstance(IN[0], list):\r\n    dynamo_polygons = IN[0]\r\nelse:\r\n    dynamo_polygons = [IN[0]]\r\n\r\ndynamo_geometries = [spolygon(geometry) for geometry in dynamo_polygons]\r\n\r\ntri = [triangulate(dyn) for dyn in dynamo_geometries]\r\n\r\nOUT = tri\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "7cb4977d76774ec2a89d8b6830d1a93a",
      "Inputs": [
        {
          "Id": "07eeba14841a45b7b7724b5b62f1d008",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee8e73d887e44c4aab68218a59d04c2c",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script Python intégré."
    }
  ],
  "Connectors": [
    {
      "Start": "c21bebc747944beeba3c6c0b952340ff",
      "End": "17dd1570c7214cf295d60b14419f0340",
      "Id": "5b03395027044e83b51cfc9fa0fe05e8",
      "IsHidden": "False"
    },
    {
      "Start": "8544a20e5ca24788bf3dac7815dd7e1c",
      "End": "cd0988babb8b4a97a6f6f850ae062823",
      "Id": "0707c795fc9b40c2b4b84513628a8c65",
      "IsHidden": "False"
    },
    {
      "Start": "4923bef91e9148009ce2b46a66ce6a57",
      "End": "323cbe25cf6c477bab596e0ce4df6fa0",
      "Id": "7a69793de5fa45fbb1b296f1be64cac8",
      "IsHidden": "False"
    },
    {
      "Start": "77d9d076810d4167b4ac621e1484dc4e",
      "End": "d62a2c12e14a414a96fd6a77b9c20911",
      "Id": "0a1711dd0aec4960a3181807da7d5728",
      "IsHidden": "False"
    },
    {
      "Start": "ddcf191211d546078f76db4fb7c79293",
      "End": "81e3f8f582ca4ec586c520b89a6556ea",
      "Id": "ca18793f803e49e9a16294e520495c86",
      "IsHidden": "False"
    },
    {
      "Start": "ddcf191211d546078f76db4fb7c79293",
      "End": "555fe22563ca409eae19ecb10eb2ea75",
      "Id": "d6a51bba2ebc44ccbdc86a934c9d1b84",
      "IsHidden": "False"
    },
    {
      "Start": "2c1fd587a9d54ca49ebead72f229a746",
      "End": "07eeba14841a45b7b7724b5b62f1d008",
      "Id": "45b92700084d4fbd9d6cb4463d975e47",
      "IsHidden": "False"
    },
    {
      "Start": "3b213b0518e246abbb61aefd425d349e",
      "End": "d1c076c1f1c44c028802624a42fc0b03",
      "Id": "e61a124344014ddd8bbdcf3a0538a27d",
      "IsHidden": "False"
    },
    {
      "Start": "ee8e73d887e44c4aab68218a59d04c2c",
      "End": "13073397b7c648fea5dc9a7c79a31cfc",
      "Id": "384735ff171d4178902ae286b43f23db",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.17.0.3472",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Aperçu en arrière-plan",
      "EyeX": 2769.98291015625,
      "EyeY": 3478.64306640625,
      "EyeZ": 9804.9296875,
      "LookX": 879.08251953125,
      "LookY": -3478.64306640625,
      "LookZ": -4069.5693359375,
      "UpX": 0.097495220601558685,
      "UpY": 0.88701087236404419,
      "UpZ": -0.45133858919143677
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Output",
        "ShowGeometry": true,
        "Id": "f801f13cf2ef482cad83f2395e4f8ea3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1111.4285714285716,
        "Y": 226.0
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "01e8470b254144e3a40019b80b7c58ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -182.28571428571425,
        "Y": 218.42857142857139
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Id": "ce5fb9df6c2c4efcac3fd8bec2cac087",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 412.735985961436,
        "Y": 174.85714285714289
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e6e4f72567d6403ba0042dadcd74212a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 66.714285714286,
        "Y": 217.92015641637295
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "bb80094b51464c379f14aa86c37699da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 218.90022038832603,
        "Y": 205.14807540241281
      },
      {
        "Name": "List.Chop",
        "ShowGeometry": true,
        "Id": "ae55e2475a8245618879cb85bcc6e5f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 629.18528859557591,
        "Y": 221.54169786546277
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "2a04dd8c0ce64ea09e0fd589a7b3b8ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 422.14515570230606,
        "Y": 306.14628645367293
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "7cb4977d76774ec2a89d8b6830d1a93a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 910.097806866886,
        "Y": 222.43685542363278
      }
    ],
    "Annotations": [],
    "X": 75.289047619047778,
    "Y": 300.75119047619046,
    "Zoom": 0.8425
  }
}